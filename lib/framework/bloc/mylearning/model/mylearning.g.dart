// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'mylearning.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

MyLearningModel _$MyLearningModelFromJson(Map<String, dynamic> json) =>
    MyLearningModel(
      eventRecordingModel: json['eventRecordingModel'] == null
          ? null
          : EventRecordingResponse.fromJson(
              json['eventRecordingModel'] as Map<String, dynamic>),
      recordingDetailsStr: json['recordingDetailsStr'] as String? ?? "",
      completedEvent: json['completedEvent'] as bool? ?? false,
      removeFromMylearning: json['removelink'] as bool? ?? false,
      reScheduleEvent: json['reScheduleEvent'] as String? ?? "",
      scheduleInstanceEvent: json['scheduleInstanceEvent'] as bool? ?? false,
      viewprerequisitecontentstatus:
          json['viewprerequisitecontentstatus'] as String? ?? "",
      CertificateAction: json['certificateaction'] as String? ?? "",
      isFromPrereq: json['isFromPrereq'] as bool? ?? false,
      fileSize: json['fileSize'] as int? ?? 0,
      bit4: json['bit4'] as bool? ?? false,
      CertificateId: json['certificateid'] as String? ?? "",
      CertificatePage: json['certificatepage'] as String? ?? "",
      WindowProperties: json['windowproperties'] as String? ?? "",
      recordingmsg: json['recordingmsg'] as String? ?? "",
      eventrecording: json['eventrecording'] == null
          ? ""
          : MyLearningModel.boolToString(json['eventrecording'] as bool?),
      recordingcontentid: json['recordingcontentid'] as String? ?? "",
      recordingurl: json['recordingurl'] as String? ?? "",
      eventViewlink: json['eventViewlink'] as String? ?? "",
      QRImageName: json['qrimagename'] as String? ?? "",
      qrCodeImagePath: json['qrcodeimagepath'] as String? ?? "",
      offlineQrCodeImagePath: json['offlineQrCodeImagePath'] as String? ?? "",
      cancelEventEnabled: json['bit2'] as bool? ?? false,
      isArchived: json['isarchived'] as bool? ?? false,
      isEnrollFutureInstance: json['isenrollfutureinstance'] as bool? ?? false,
      isBadCancellationEnabled:
          json['isbadcancellationenabled'] as bool? ?? false,
      actionWaitlist: json['actionWaitlist'] as String? ?? "",
      percentCompleted: json['percentcompleted'] as String? ?? "",
      isRequired: json['required'] as int? ?? 0,
      eventCompletedOrNot: json['eventCompletedOrNot'] as bool? ?? false,
      waitlistlimit: json['waitlistlimit'] as int? ?? -1,
      waitlistenrolls: json['waitlistenrolls'] as int? ?? -1,
      enrollmentlimit: json['enrollmentlimit'] as int? ?? 0,
      noofusersenrolled: json['noofusersenrolled'] as int? ?? 0,
      cancelWaitList: json['cancelWaitList'] as int? ?? 0,
      progress: json['progress'] as String? ?? "",
      userName: json['userName'] as String? ?? "",
      siteID: json['siteid'] == null
          ? ""
          : MyLearningModel.stringVal(json['siteid']),
      siteName: json['sitename'] as String? ?? "",
      siteURL: json['siteurl'] as String? ?? "",
      userID: json['userid'] == null
          ? ""
          : MyLearningModel.stringVal(json['userid']),
      courseName: json['name'] as String? ?? "",
      shortDes: json['shortdescription'] as String? ?? "",
      author: json['authordisplayname'] as String? ?? "",
      contentID: json['contentid'] as String? ?? "",
      createdDate: json['createddate'] as String? ?? "",
      displayName: json['displayName'] as String? ?? "",
      durationEndDate: json['durationenddate'] as String? ?? "",
      objectId: json['objectid'] as String? ?? "",
      imageData: json['imageData'] as String? ?? "",
      relatedContentCount: json['relatedconentcount'] == null
          ? "0"
          : MyLearningModel.stringVal(json['relatedconentcount']),
      isDownloaded: json['isdownloaded'] == null
          ? ""
          : MyLearningModel.boolToString(json['isdownloaded'] as bool?),
      courseAttempts: json['courseattempts'] as String? ?? "",
      objecttypeId: json['objecttypeid'] == null
          ? ""
          : MyLearningModel.stringVal(json['objecttypeid']),
      scoId:
          json['scoid'] == null ? "" : MyLearningModel.stringVal(json['scoid']),
      startPage: json['startpage'] as String? ?? "",
      statusActual: json['actualstatus'] as String? ?? "",
      statusDisplay: json['corelessonstatus'] as String? ?? "",
      contentType: json['contentType'] as String? ?? "",
      longDes: json['longdescription'] as String? ?? "",
      mediaName: json['contenttype'] as String? ?? "",
      ratingId: json['ratingid'] == null
          ? ""
          : MyLearningModel.stringVal(json['ratingid']),
      publishedDate: json['publisheddate'] as String? ?? "",
      eventstartTime: json['eventstartdatedisplay'] as String? ?? "",
      eventendTime: json['eventenddatedisplay'] as String? ?? "",
      mediatypeId: json['mediatypeid'] == null
          ? ""
          : MyLearningModel.stringVal(json['mediatypeid']),
      dateAssigned: json['dateassigned'] as String? ?? "",
      keywords: json['keywords'] as String? ?? "",
      eventContentid: json['eventcontentid'] as String? ?? "",
      eventAddedToCalender: json['eventAddedToCalender'] as bool? ?? false,
      isExpiry: json['isExpiry'] as String? ?? "",
      locationName: json['eventfulllocation'] as String? ?? "",
      timeZone: json['timezone'] as String? ?? "",
      participantUrl: json['participanturl'] as String? ?? "",
      password: json['password'] as String? ?? "",
      isListView: json['bit5'] == null
          ? ""
          : MyLearningModel.boolToString(json['bit5'] as bool?),
      thumbnailImagePath: json['thumbnailImagePath'] as String? ?? "",
      EventScheduleType: json['eventscheduletype'] as int? ?? 0,
      TableofContent: json['TableofContent'] as String? ?? "",
      LearningObjectives: json['LearningObjectives'] as String? ?? "",
      objectfolderid: json['objectfolderid'] as String? ?? "",
      tagname: json['tagname'] as String? ?? "",
      instanceparentcontentid: json['instanceparentcontentid'] as String? ?? "",
      contentEnrolled: json['contentEnrolled'] as String? ?? "false",
      duration: json['duration'] as String? ?? "",
      credits: json['credittypes'] as String? ?? "",
      decimal2: json['decimal2'] == null
          ? ""
          : MyLearningModel.stringVal(json['decimal2']),
      bookmarkID: json['bookmarkID'] as int? ?? 0,
      totalratings: json['totalratings'] as int? ?? 0,
      contentTypeImagePath: json['iconpath'] as String? ?? "",
      eventType: json['eventType'] as String? ?? "",
      thumbnailVideoPath: json['thumbnailVideoPath'] as String? ?? "",
      contentExpire: json['contentExpire'] as String? ?? "",
      joinurl: json['joinurl'] as String? ?? "",
      typeofevent: json['typeofevent'] as int? ?? 0,
      downloadURL: json['downloadURL'] as String? ?? "",
      offlinepath: json['offlinepath'] as String? ?? "",
      wresult: json['wresult'] as String? ?? "",
      wmessage: json['wmessage'] as String? ?? "",
      presenter: json['presenter'] as String? ?? "",
      startDate: json['startDate'] as String? ?? "",
      groupName: json['headerlocationname'] as String? ?? "",
      activityId: json['activityid'] as String? ?? "",
      score: json['score'] as String? ?? "",
      timeDelay: json['timeDelay'] as String? ?? "",
      blockName: json['blockName'] as String? ?? "",
      sequenceNumber: json['sequenceNumber'] as int? ?? 0,
      folderID: json['folderID'] as String? ?? "",
      parentID: json['parentID'] as String? ?? "",
      trackScoid: json['trackScoid'] as String? ?? "",
      showStatus: json['showStatus'] as String? ?? "",
      folderPath: json['folderpath'] as String? ?? "",
      eventstartUtcTime: json['eventstartdatetime'] as String? ?? "",
      eventendUtcTime: json['eventenddatetime'] as String? ?? "",
      memberShipLevel: json['membershiplevel'] as int? ?? 1,
      membershipname: json['membershipname'] as String? ?? "Free",
      trackOrRelatedContentID: json['trackOrRelatedContentID'] as String? ?? "",
      googleProductID: json['googleProductID'] as String? ?? "",
      componentId: json['componentId'] as String? ?? "",
      price: json['price'] as String? ?? "",
      addedToMylearning: json['addedToMylearning'] as int? ?? 0,
      itemType: json['itemType'] as String? ?? "",
      viewType: json['viewType'] as String? ?? "",
      currency: json['currency'] as String? ?? "",
      jwvideokey: json['jwvideokey'] as String? ?? "",
      jwStartPage: json['jwstartpage'] as String? ?? "",
      cloudmediaplayerkey: json['cloudmediaplayerkey'] as String? ?? "",
      aviliableSeats: json['aviliableSeats'] as String? ?? "",
      eventID: json['eventID'] as String? ?? "",
      isDiscussion: json['isDiscussion'] as String? ?? "",
    );

Map<String, dynamic> _$MyLearningModelToJson(MyLearningModel instance) =>
    <String, dynamic>{
      'eventRecordingModel': instance.eventRecordingModel,
      'recordingDetailsStr': instance.recordingDetailsStr,
      'completedEvent': instance.completedEvent,
      'removelink': instance.removeFromMylearning,
      'reScheduleEvent': instance.reScheduleEvent,
      'scheduleInstanceEvent': instance.scheduleInstanceEvent,
      'viewprerequisitecontentstatus': instance.viewprerequisitecontentstatus,
      'certificateaction': instance.CertificateAction,
      'isFromPrereq': instance.isFromPrereq,
      'fileSize': instance.fileSize,
      'bit4': instance.bit4,
      'certificateid': instance.CertificateId,
      'certificatepage': instance.CertificatePage,
      'windowproperties': instance.WindowProperties,
      'recordingmsg': instance.recordingmsg,
      'eventrecording': MyLearningModel.stringToBool(instance.eventrecording),
      'recordingcontentid': instance.recordingcontentid,
      'recordingurl': instance.recordingurl,
      'eventViewlink': instance.eventViewlink,
      'qrimagename': instance.QRImageName,
      'qrcodeimagepath': instance.qrCodeImagePath,
      'offlineQrCodeImagePath': instance.offlineQrCodeImagePath,
      'bit2': instance.cancelEventEnabled,
      'isarchived': instance.isArchived,
      'isenrollfutureinstance': instance.isEnrollFutureInstance,
      'isbadcancellationenabled': instance.isBadCancellationEnabled,
      'actionWaitlist': instance.actionWaitlist,
      'percentcompleted': instance.percentCompleted,
      'required': instance.isRequired,
      'eventCompletedOrNot': instance.eventCompletedOrNot,
      'waitlistlimit': instance.waitlistlimit,
      'waitlistenrolls': instance.waitlistenrolls,
      'enrollmentlimit': instance.enrollmentlimit,
      'noofusersenrolled': instance.noofusersenrolled,
      'cancelWaitList': instance.cancelWaitList,
      'progress': instance.progress,
      'userName': instance.userName,
      'siteid': instance.siteID,
      'sitename': instance.siteName,
      'siteurl': instance.siteURL,
      'userid': instance.userID,
      'name': instance.courseName,
      'shortdescription': instance.shortDes,
      'authordisplayname': instance.author,
      'contentid': instance.contentID,
      'createddate': instance.createdDate,
      'displayName': instance.displayName,
      'durationenddate': instance.durationEndDate,
      'objectid': instance.objectId,
      'imageData': instance.imageData,
      'relatedconentcount': instance.relatedContentCount,
      'isdownloaded': MyLearningModel.stringToBool(instance.isDownloaded),
      'courseattempts': instance.courseAttempts,
      'objecttypeid': MyLearningModel.stringToDouble(instance.objecttypeId),
      'scoid': MyLearningModel.stringToDouble(instance.scoId),
      'startpage': instance.startPage,
      'actualstatus': instance.statusActual,
      'corelessonstatus': instance.statusDisplay,
      'contentType': instance.contentType,
      'longdescription': instance.longDes,
      'contenttype': instance.mediaName,
      'ratingid': instance.ratingId,
      'publisheddate': instance.publishedDate,
      'eventstartdatedisplay': instance.eventstartTime,
      'eventenddatedisplay': instance.eventendTime,
      'mediatypeid': instance.mediatypeId,
      'dateassigned': instance.dateAssigned,
      'keywords': instance.keywords,
      'eventcontentid': instance.eventContentid,
      'eventAddedToCalender': instance.eventAddedToCalender,
      'isExpiry': instance.isExpiry,
      'eventfulllocation': instance.locationName,
      'timezone': instance.timeZone,
      'participanturl': instance.participantUrl,
      'password': instance.password,
      'bit5': instance.isListView,
      'thumbnailImagePath': instance.thumbnailImagePath,
      'eventscheduletype': instance.EventScheduleType,
      'TableofContent': instance.TableofContent,
      'LearningObjectives': instance.LearningObjectives,
      'objectfolderid': instance.objectfolderid,
      'tagname': instance.tagname,
      'instanceparentcontentid': instance.instanceparentcontentid,
      'contentEnrolled': instance.contentEnrolled,
      'duration': instance.duration,
      'credittypes': instance.credits,
      'decimal2': MyLearningModel.stringToDouble(instance.decimal2),
      'bookmarkID': instance.bookmarkID,
      'totalratings': instance.totalratings,
      'iconpath': instance.contentTypeImagePath,
      'eventType': instance.eventType,
      'thumbnailVideoPath': instance.thumbnailVideoPath,
      'contentExpire': instance.contentExpire,
      'joinurl': instance.joinurl,
      'typeofevent': instance.typeofevent,
      'downloadURL': instance.downloadURL,
      'offlinepath': instance.offlinepath,
      'wresult': instance.wresult,
      'wmessage': instance.wmessage,
      'presenter': instance.presenter,
      'startDate': instance.startDate,
      'headerlocationname': instance.groupName,
      'activityid': instance.activityId,
      'score': instance.score,
      'timeDelay': instance.timeDelay,
      'blockName': instance.blockName,
      'sequenceNumber': instance.sequenceNumber,
      'folderID': instance.folderID,
      'parentID': instance.parentID,
      'trackScoid': instance.trackScoid,
      'showStatus': instance.showStatus,
      'folderpath': instance.folderPath,
      'eventstartdatetime': instance.eventstartUtcTime,
      'eventenddatetime': instance.eventendUtcTime,
      'membershiplevel': instance.memberShipLevel,
      'membershipname': instance.membershipname,
      'trackOrRelatedContentID': instance.trackOrRelatedContentID,
      'googleProductID': instance.googleProductID,
      'componentId': instance.componentId,
      'price': instance.price,
      'addedToMylearning': instance.addedToMylearning,
      'itemType': instance.itemType,
      'viewType': instance.viewType,
      'currency': instance.currency,
      'jwvideokey': instance.jwvideokey,
      'jwstartpage': instance.jwStartPage,
      'cloudmediaplayerkey': instance.cloudmediaplayerkey,
      'aviliableSeats': instance.aviliableSeats,
      'eventID': instance.eventID,
      'isDiscussion': instance.isDiscussion,
    };
